<!--pages/posts/posts.wxml-->
<view>
  <!-- 需要注意字符串和Js变量的区别 主要是Boolean类型 -->
  <!-- 数字字符串在Js中会进行转型，因为属性所要求的数据类型为数字 “3000”即转换为3000 -->
  <swiper indicator-dots="{{true}}" autoplay="{{true}}" circular interval="3000">
    <!-- swiper 滑块容器组件 负责滑动 但是 不限制滑动的内容 -->
    <swiper-item>
      <!-- 插槽 Any Type -->
      <image src="/images/bestplayers.png"></image>
    </swiper-item>
    <swiper-item>
      <image src="/images/lpl.png"></image>
    </swiper-item>
    <swiper-item>
      <image src="/images/jumpfly.png"></image>
    </swiper-item>
  </swiper>

  <block wx:key="index" wx:for="{{postList}}">
    <!-- data-xxx (xxx将统一为小写形式,复合单词采用连字符1形式如data-post-id最后再event中显示为postId) 表示自定义属性 其属性值可以从事件对象中获取
    event.currentTarget.dataset -->
    <view data-id="{{item.postId}}" bind:tap="onGoToDetail" class="post-container">
      <!-- 第一部分 -->
      <view class="post-author-date">
        <!-- 对用户头像点击以后跳转到其他界面需要注意事件冒泡
        我们可以使用catch:
        同理对于喜欢和收藏也是同样的道理 -->
        <!-- catch:tap="onGoToUserProfile" -->
        <image class="post-author" src="{{item.avatar}}"></image>
        <text class="post-date">{{item.date}}</text>
      </view>    

      <!-- 第二部分 -->
      <text class="post-title">{{item.title}}</text>

      <!-- 第三部分 -->
      <image class="post-image" src="{{item.imgSrc}}"></image>

      <!-- 第四部分 -->
      <text class="post-content">{{item.content}}</text>

      <!-- 第五部分 -->
      <view class="post-like">
        <MyIcon class="post-like-image" size="28" color="#666" name="favor" />
        <text class="post-like-font">{{item.collection}}</text>
        <MyIcon class="post-like-image" size="32" color="#666" name="eye" />
        <text class="post-like-font">{{item.reading}}</text>
      </view>

    </view>
  </block>
</view>






<!-- "entryPagePath": "pages/posts/posts", -->

<!-- 条件渲染 -->
<!-- wx:if="{{data}}" wx:else -->

<!-- 列表渲染 -->
<!-- wx:for 配合block包裹需要影响的内容块使用-->
<!-- 可以通过wx:for-item="x"修改item.avatar为x.avatar配合使用 -->
<!-- 当前内容序号可以通过{{index}}获取
当前内容数据可以通过{{item.xxx}}获取 -->
<!-- index重命名 wx:for-index="x" -->

<!-- block包裹多个可循环的内容块 -->
<!-- 如果block下面只有一个view标记，我们就可以不适用block而把数据直接绑定给view -->